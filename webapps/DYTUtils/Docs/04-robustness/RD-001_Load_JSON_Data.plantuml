@startuml UC-001_Orchestrated_Flow
!theme vibrant
left to right direction
' skinparam linetype ortho

actor Widget

package "DocumentHelper" as DocumentHelperModule {
    control "searchDocumentByTitle" as searchDocumentByTitle
    control "downloadFileContentByName" as downloadFileContentByName
}

package "JsonManager" as JsonManagerModule {
    control "loadJsonFromDocument" as loadJsonFromDocument
    control "validateParams" as validateParams
    control "validateSearchResult" as validateSearchResult
    control "validateDownloadResult" as validateDownloadResult
    control "deserializeData" as deserializeData
}

' Entities (can be added if needed for clarity, but keeping it focused on control flow for now)
' entity "searchResult" as searchResultEntity
' entity "fileContent" as fileContentEntity
' entity "DownloadedJson" as DownloadedJsonEntity


Widget --> loadJsonFromDocument : 1. loadJsonFromDocument(documentTitle, fileName)

loadJsonFromDocument --> validateParams: 2. (documentTitle, fileName)
validateParams ..> loadJsonFromDocument : 2.1 success
validateParams .[#red].> loadJsonFromDocument : 2.1a <color:red>failure (invalid params)</color>

' UC-001 Step 3: Invoke UC-003 (searchDocumentByTitle) and get searchResult
' This happens if validateParams (step 2) was successful.
loadJsonFromDocument --> searchDocumentByTitle : 3. (documentTitle)
searchDocumentByTitle ..> loadJsonFromDocument : 3.1 (searchResult)
searchDocumentByTitle .[#red].> loadJsonFromDocument : 3.1a <color:red>failure (search error)</color>

' UC-001 Step 4: Process searchResult
' This happens if step 3 was successful.
loadJsonFromDocument --> validateSearchResult : 4. (searchResult)
validateSearchResult ..> loadJsonFromDocument : 4.1 success (docId, documentInfo) ' docId extracted
validateSearchResult .[#red].> loadJsonFromDocument : 4.1a <color:red>failure (doc not found)</color>

' UC-001 Step 5: Invoke UC-004 (downloadFileContentByName) and get fileContent
' This happens if step 4 was successful.
loadJsonFromDocument --> downloadFileContentByName : 5. (docId, fileName) ' fileName is passed from original params
downloadFileContentByName ..> loadJsonFromDocument : 5.1 (fileContent, fileInfo)
downloadFileContentByName .[#red].> loadJsonFromDocument : 5.1a <color:red>failure (download error / file not in doc)</color>

' UC-001 Step 6: Process download result
' This happens if step 5 was successful.
loadJsonFromDocument --> validateDownloadResult : 6. (fileContent, fileInfo)
validateDownloadResult ..> loadJsonFromDocument : 6.1 success
validateDownloadResult .[#red].> loadJsonFromDocument : 6.1a <color:red>failure (invalid download result)</color>

' UC-001 Step 7: Deserialize data
' This happens if step 6 was successful.
loadJsonFromDocument --> deserializeData : 7. (fileContent)
deserializeData ..> loadJsonFromDocument : 7.1 success (DownloadedJson)
deserializeData .[#red].> loadJsonFromDocument : 7.1a <color:red>failure (parse error)</color>

' UC-001 Step 8: Return result to Widget
loadJsonFromDocument ..> Widget : 8. (DownloadedJson) ' Final success
loadJsonFromDocument .[#red].> Widget : 8.a <color:red>failure ' Final failure (if any previous step failed)</color>

@enduml
