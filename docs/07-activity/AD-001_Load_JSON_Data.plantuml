@startuml AD-001_Load_JSON_Data
!theme vibrant
title Activity Diagram: Load JSON Data (UC-001)

start

:Widget initiates "Load JSON Data";
note right: Input: documentTitle, fileName

partition "JsonManager" {
    :Call `loadJsonFromDocument(documentTitle, fileName)`;

    :Call `validateParams(documentTitle, fileName)`;
    if (Parameters valid?) then (yes)
        :Call `DocumentHelper.searchDocumentByTitle(documentTitle)` (UC-003);
        if (Search successful?) then (yes)
            :Receive `searchResult`;
            :Call `validateSearchResult(searchResult)`;
            if (Document found and valid?) then (yes)
                :Extract `docId` from `searchResult`;
                :Call `DocumentHelper.completeFileDownload(docId, fileName)` (UC-015);
                ' This internally calls:
                ' 1. Get Document Files Metadata (or our getDocumentDetailsById) to find fileId
                ' 2. Get Download Ticket (UC-004)
                ' 3. Download File from FCS (UC-014)
                if (Download successful?) then (yes)
                    :Receive `fileContent` and `fileInfo`;
                    :Call `validateDownloadResult(fileContent, fileInfo)`;
                    if (Download result valid?) then (yes)
                        :Call `deserializeData(fileContent)`;
                        if (Deserialization successful?) then (yes)
                            :Receive `DownloadedJson`;
                            :Return `DownloadedJson` to Widget;
                        else (no)
                            :Log Deserialization Error;
                            :Return Error to Widget;
                        endif
                    else (no)
                        :Log Invalid Download Result Error;
                        :Return Error to Widget;
                    endif
                else (no)
                    :Log Download Error;
                    :Return Error to Widget;
                endif
            else (no)
                :Log Document Not Found or Invalid Search Result Error;
                :Return Error to Widget;
            endif
        else (no)
            :Log Search Error;
            :Return Error to Widget;
        endif
    else (no)
        :Log Invalid Parameters Error;
        :Return Error to Widget;
    endif
}

stop

@enduml
