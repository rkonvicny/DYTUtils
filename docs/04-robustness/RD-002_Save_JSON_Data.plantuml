@startuml RD-002_Save_JSON_Data
!theme vibrant
left to right direction
' skinparam linetype ortho

actor Widget

package "DocumentHelper" as DocumentHelperModule {
    control "UC-010 EnsureDocExistsSvc" as UC010_EnsureDocExistsSvc
    control "UC-007 LockDocSvc" as UC007_LockDocSvc
    control "UC-009 DeleteFileSvc" as UC009_DeleteFileSvc
    control "UC-016 CompleteFileUploadSvc" as UC016_CompleteFileUploadSvc
    control "UC-008 UnlockDocSvc" as UC008_UnlockDocSvc
}

package "JsonManager" as JsonManagerModule {
    control "saveJsonToDocument" as saveJsonToDocumentCtrl
    control "validateInputParams" as validateInputParamsCtrl
    control "serializeJsonData" as serializeJsonDataCtrl
}

' Entities (can be added if needed for clarity)
' entity "jsonData" as jsonDataEntity
' entity "documentTitle" as documentTitleEntity
' entity "fileName" as fileNameEntity
' entity "docId" as docIdEntity
' entity "documentInfo" as documentInfoEntity
' entity "fileContent" as fileContentEntity
' entity "FileInfo" as fileInfoEntity

Widget --> saveJsonToDocumentCtrl : 1. saveJsonToDocument(documentTitle, fileName, jsonData)

' UC-002 Step 2: Validate input params
saveJsonToDocumentCtrl --> validateInputParamsCtrl: 2. (documentTitle, fileName, jsonData)
validateInputParamsCtrl ..> saveJsonToDocumentCtrl : 2.1 success
validateInputParamsCtrl .[#red].> saveJsonToDocumentCtrl : 2.1a <color:red>failure (invalid params - UC002:7.A)</color>

' UC-002 Step 4: Ensure document exists (UC-010)
' This happens if validateInputParamsCtrl (step 2) was successful.
saveJsonToDocumentCtrl --> UC010_EnsureDocExistsSvc : 4. (documentTitle)
UC010_EnsureDocExistsSvc ..> saveJsonToDocumentCtrl : 4.1 (docId, documentInfo)
UC010_EnsureDocExistsSvc .[#red].> saveJsonToDocumentCtrl : 4.1a <color:red>failure (ensure doc error - UC002:7.C)</color>

' UC-002 Step 5: Lock document (UC-007)
' This happens if step 4 was successful.
saveJsonToDocumentCtrl --> UC007_LockDocSvc : 5. (docId)
UC007_LockDocSvc ..> saveJsonToDocumentCtrl : 5.1 success (lock confirmed)
UC007_LockDocSvc .[#red].> saveJsonToDocumentCtrl : 5.1a <color:red>failure (lock error - UC002:7.D)</color>

' UC-002 Step 6: Delete existing file (UC-009)
' This happens if step 5 was successful.
saveJsonToDocumentCtrl --> UC009_DeleteFileSvc : 6. (docId, fileName)
UC009_DeleteFileSvc ..> saveJsonToDocumentCtrl : 6.1 success (delete confirmed / or file not found)
UC009_DeleteFileSvc .[#orange].> saveJsonToDocumentCtrl : 6.1a <color:orange>failure (delete error - UC002:7.E)</color> ' Orange for non-critical if file not found

' UC-002 Step 3: Serialize jsonData
' This happens if step 6 was successful (or file not found was ok).
saveJsonToDocumentCtrl --> serializeJsonDataCtrl : 3. (jsonData)
serializeJsonDataCtrl ..> saveJsonToDocumentCtrl : 3.1 (fileContent)
serializeJsonDataCtrl .[#red].> saveJsonToDocumentCtrl : 3.1a <color:red>failure (serialization error - UC002:7.B)</color>

' UC-002 Step 7: Upload file (UC-016)
' This happens if step 3 (serialization) was successful.
saveJsonToDocumentCtrl --> UC016_CompleteFileUploadSvc : 7. (docId, fileName, fileContent)
UC016_CompleteFileUploadSvc ..> saveJsonToDocumentCtrl : 7.1 (FileInfo)
UC016_CompleteFileUploadSvc .[#red].> saveJsonToDocumentCtrl : 7.1a <color:red>failure (upload error - UC002:7.F)</color>

' UC-002 Step 8: Unlock document (UC-008)
' This happens if step 7 was successful (or even if it failed, as a cleanup).
' The "best-effort" unlock logic is handled by saveJsonToDocumentCtrl.
saveJsonToDocumentCtrl --> UC008_UnlockDocSvc : 8. (docId)
UC008_UnlockDocSvc ..> saveJsonToDocumentCtrl : 8.1 success (unlock confirmed)
UC008_UnlockDocSvc .[#orange].> saveJsonToDocumentCtrl : 8.1a <color:orange>failure (unlock error - UC002:7.G, log only)</color>

' UC-002 Step 9: Return result to Widget
saveJsonToDocumentCtrl ..> Widget : 9. (FileInfo) ' Final success
saveJsonToDocumentCtrl .[#red].> Widget : 9.a <color:red>failure ' Final failure from any critical previous step</color>

@enduml
